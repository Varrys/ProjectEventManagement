@page "/fetchdata"
@inject HttpClient HttpClient
@using BusinessLogic.Entities

@if (authors == null)
{
    <p>No Todo Items found.</p>
}
else
{
    <ul>
        @foreach (var item in authors)
        {
            <li>@item.FirstName</li>
        }
    </ul>
}

@code {
    private Author[]? authors;
    protected override async Task OnInitializedAsync() => 
        authors = await HttpClient.GetFromJsonAsync<Author[]>("http://localhost:5052/api/Authors");
}


@*
@using System.Net.Http
@using System.Text.Json
@using System.Text.Json.Serialization
@using BusinessLogic.Entities
@inject HttpClient HttpClient

<h3>Author List</h3>

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Birth Date</th>
        <th>Books</th>
    </tr>
    </thead>
    <tbody>
    @if (authors != null)
    {
        foreach (var author in authors)
        {
            <tr>
                <td>@author.Id</td>
                <td>@author.FirstName 
                    @author.LastName</td>
                <td>@author.BirthDate</td>
                <td>
                    <ul>
                        @foreach (var book in author.Books)
                        {
                            <li>@book.Title</li>
                        }
                    </ul>
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="4">Loading...</td>
        </tr>
    }
    </tbody>
</table>

@code {
    List<Author>? authors;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await HttpClient.GetAsync("http://localhost:5052/api/Authors");
            response.EnsureSuccessStatusCode();

            var content = await response.Content.ReadAsStringAsync();
            authors = JsonSerializer.Deserialize<List<Author>>(content);
        }
        catch (HttpRequestException)
        {
    // ...
        }
    }
}
*@
