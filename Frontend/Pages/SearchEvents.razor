@page "/SearchEvents"
@using BusinessLogic.Entities
@using System.Text.Json
@inject HttpClient httpClient

<h3>Search Events</h3>

<div class="search-bar">
    <input type="text" placeholder="Search by Name, Date, or Location" @bind="@searchTerm" />
    <button @onclick="Search">Search</button>
    <button @onclick="ResetSearch">Reset</button>
</div>

@if (searchedEvents == null)
{
    <p>Loading...</p>
}
else if (searchedEvents.Length == 0)
{
    <p>No events found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Event ID</th>
                <th>Name</th>
                <th>Date</th>
                <th>Location</th>
                <th>Description</th>
                <th>Max Capacity</th>
                <th>Tickets</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in searchedEvents)
            {
                <tr>
                    <td>@item.EventId</td>
                    <td>@item.Name</td>
                    <td>@item.Date.ToString("yyyy-MM-dd HH:mm:ss")</td>
                    <td>@item.Location</td>
                    <td>@item.Description</td>
                    <td>@item.MaxCapacity</td>
                    <td>
                        @if (item.Tickets != null && item.Tickets.Count > 0)
                        {
                            <ul>
                                @foreach (var ticket in item.Tickets)
                                {
                                    <li>
                                        <p>Ticket ID: @ticket.TicketId</p>
                                        <p>Price: @ticket.Price.ToString("0.00")</p>
                                        <p>Name: @ticket.Name</p>
                                        <p>Description: @ticket.Description</p>
                                        <p>Quantity: @ticket.Quantity</p>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No tickets available</p>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Event[] searchedEvents;
    private string searchTerm = "";

    private async Task Search()
    {
        if (string.IsNullOrWhiteSpace(searchTerm))
        {
            searchedEvents = null;
        }
        else
        {
            Console.WriteLine("Input = "+ searchTerm);
            Console.WriteLine($"http://localhost:5052/api/Events?searchTerm={Uri.EscapeDataString(searchTerm)}");
            var response = await httpClient.GetAsync($"http://localhost:5052/api/Events/search?searchTerm={Uri.EscapeDataString(searchTerm)}");
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                searchedEvents = JsonSerializer.Deserialize<Event[]>(json, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
            }
            else
            {
                searchedEvents = null;
            }
        }
    }

    private void ResetSearch()
    {
        searchTerm = "";
        searchedEvents = null;
    }
}
